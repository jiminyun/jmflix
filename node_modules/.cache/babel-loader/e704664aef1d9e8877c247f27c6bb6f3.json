{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/jiminyun/workspaces/jmflix/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jiminyun/workspaces/jmflix/src/Screens/Search/SearchPresenter.js\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 20px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nvar Container = styled.div(_templateObject());\nvar Form = styled.form(_templateObject2());\nvar Input = styled.input(_templateObject3());\n\nvar SearchPresenter = function SearchPresenter(_ref) {\n  var movieResults = _ref.movieResults,\n      tvResults = _ref.tvResults,\n      searchTerm = _ref.searchTerm,\n      loading = _ref.loading,\n      error = _ref.error,\n      handleSubmit = _ref.handleSubmit;\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"Search Movies or TV shows\",\n    value: searchTerm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })));\n};\n\nSearchPresenter.proTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired\n};\nexport default SearchPresenter;","map":{"version":3,"sources":["/Users/jiminyun/workspaces/jmflix/src/Screens/Search/SearchPresenter.js"],"names":["React","PropTypes","styled","Container","div","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","loading","error","handleSubmit","proTypes","array","bool","isRequired","string","func"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,SAAS,GAAGD,MAAM,CAACE,GAAV,mBAAf;AAIA,IAAMC,IAAI,GAAGH,MAAM,CAACI,IAAV,oBAAV;AAEA,IAAMC,KAAK,GAAGL,MAAM,CAACM,KAAV,oBAAX;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MACtBC,YADsB,QACtBA,YADsB;AAAA,MAEtBC,SAFsB,QAEtBA,SAFsB;AAAA,MAGtBC,UAHsB,QAGtBA,UAHsB;AAAA,MAItBC,OAJsB,QAItBA,OAJsB;AAAA,MAKtBC,KALsB,QAKtBA,KALsB;AAAA,MAMtBC,YANsB,QAMtBA,YANsB;AAAA,SAQtB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEA,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAC,2BAAnB;AAA+C,IAAA,KAAK,EAAEH,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CARsB;AAAA,CAAxB;;AAeAH,eAAe,CAACO,QAAhB,GAA2B;AACzBN,EAAAA,YAAY,EAAET,SAAS,CAACgB,KADC;AAEzBN,EAAAA,SAAS,EAAEV,SAAS,CAACgB,KAFI;AAGzBL,EAAAA,UAAU,EAAEX,SAAS,CAACgB,KAHG;AAIzBJ,EAAAA,OAAO,EAAEZ,SAAS,CAACiB,IAAV,CAAeC,UAJC;AAKzBL,EAAAA,KAAK,EAAEb,SAAS,CAACmB,MALQ;AAMzBL,EAAAA,YAAY,EAAEd,SAAS,CAACoB,IAAV,CAAeF;AANJ,CAA3B;AASA,eAAeV,eAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form``;\n\nconst Input = styled.input``;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  loading,\n  error,\n  handleSubmit\n}) => (\n  <Container>\n    <Form onSubmit={handleSubmit}>\n      <Input placeholder=\"Search Movies or TV shows\" value={searchTerm} />\n    </Form>\n  </Container>\n);\n\nSearchPresenter.proTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;\n"]},"metadata":{},"sourceType":"module"}