{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jiminyun/workspaces/jmflix/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jiminyun/workspaces/jmflix/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/jiminyun/workspaces/jmflix/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jiminyun/workspaces/jmflix/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jiminyun/workspaces/jmflix/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jiminyun/workspaces/jmflix/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jiminyun/workspaces/jmflix/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jiminyun/workspaces/jmflix/src/Routes/Search/SearchContainer.js\";\nimport React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"../../API\";\n\nvar _default =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  function _default() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(_default)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      movieResults: null,\n      tvResults: null,\n      searchTerm: \"code\",\n      loading: false,\n      error: null\n    };\n\n    _this.handleSubmit = function () {\n      var searchTerm = _this.state.searchTerm;\n\n      if (searchTerm !== \"\") {\n        _this.searchByTerm();\n      }\n    };\n\n    _this.searchByTerm =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var searchTerm, movieResults, tvResults;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              searchTerm = _this.state.searchTerm;\n              _context.prev = 1;\n              _context.next = 4;\n              return moviesApi.search(searchTerm);\n\n            case 4:\n              movieResults = _context.sent;\n              _context.next = 7;\n              return tvApi.search(searchTerm);\n\n            case 7:\n              tvResults = _context.sent;\n              console.log(movieResults, tvResults);\n\n              _this.setState({\n                loading: true\n              });\n\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](1);\n\n              _this.setState({\n                error: \"Can't find results.\"\n              });\n\n            case 15:\n              _context.prev = 15;\n\n              _this.setState({\n                loading: false\n              });\n\n              return _context.finish(15);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[1, 12, 15, 18]]);\n    }));\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.handleSubmit();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          movieResult = _this$state.movieResult,\n          tvResult = _this$state.tvResult,\n          searchTerm = _this$state.searchTerm,\n          loading = _this$state.loading,\n          error = _this$state.error;\n      return React.createElement(SearchPresenter, {\n        movieResult: movieResult,\n        tvResult: tvResult,\n        loading: loading,\n        searchTerm: searchTerm,\n        error: error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/Users/jiminyun/workspaces/jmflix/src/Routes/Search/SearchContainer.js"],"names":["React","SearchPresenter","moviesApi","tvApi","state","movieResults","tvResults","searchTerm","loading","error","handleSubmit","searchByTerm","search","console","log","setState","movieResult","tvResult","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,WAAjC;;;;;;;;;;;;;;;;;;;UAGEC,K,GAAQ;AACNC,MAAAA,YAAY,EAAE,IADR;AAENC,MAAAA,SAAS,EAAE,IAFL;AAGNC,MAAAA,UAAU,EAAE,MAHN;AAINC,MAAAA,OAAO,EAAE,KAJH;AAKNC,MAAAA,KAAK,EAAE;AALD,K;;UAYRC,Y,GAAe,YAAM;AAAA,UACXH,UADW,GACI,MAAKH,KADT,CACXG,UADW;;AAEnB,UAAIA,UAAU,KAAK,EAAnB,EAAuB;AACrB,cAAKI,YAAL;AACD;AACF,K;;UAEDA,Y;;;;6BAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AACLJ,cAAAA,UADK,GACU,MAAKH,KADf,CACLG,UADK;AAAA;AAAA;AAAA,qBAGgBL,SAAS,CAACU,MAAV,CAAiBL,UAAjB,CAHhB;;AAAA;AAGLF,cAAAA,YAHK;AAAA;AAAA,qBAIaF,KAAK,CAACS,MAAN,CAAaL,UAAb,CAJb;;AAAA;AAILD,cAAAA,SAJK;AAKXO,cAAAA,OAAO,CAACC,GAAR,CAAYT,YAAZ,EAA0BC,SAA1B;;AACA,oBAAKS,QAAL,CAAc;AAAEP,gBAAAA,OAAO,EAAE;AAAX,eAAd;;AANW;AAAA;;AAAA;AAAA;AAAA;;AAQX,oBAAKO,QAAL,CAAc;AAAEN,gBAAAA,KAAK,EAAE;AAAT,eAAd;;AARW;AAAA;;AAUX,oBAAKM,QAAL,CAAc;AAAEP,gBAAAA,OAAO,EAAE;AAAX,eAAd;;AAVW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;wCAXK;AAClB,WAAKE,YAAL;AACD;;;6BAuBQ;AAAA,wBACuD,KAAKN,KAD5D;AAAA,UACCY,WADD,eACCA,WADD;AAAA,UACcC,QADd,eACcA,QADd;AAAA,UACwBV,UADxB,eACwBA,UADxB;AAAA,UACoCC,OADpC,eACoCA,OADpC;AAAA,UAC6CC,KAD7C,eAC6CA,KAD7C;AAEP,aACE,oBAAC,eAAD;AACE,QAAA,WAAW,EAAEO,WADf;AAEE,QAAA,QAAQ,EAAEC,QAFZ;AAGE,QAAA,OAAO,EAAET,OAHX;AAIE,QAAA,UAAU,EAAED,UAJd;AAKE,QAAA,KAAK,EAAEE,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AASD;;;;EA7C0BT,KAAK,CAACkB,S","sourcesContent":["import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"../../API\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"code\",\n    loading: false,\n    error: null\n  };\n\n  componentDidMount() {\n    this.handleSubmit();\n  }\n\n  handleSubmit = () => {\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    try {\n      const movieResults = await moviesApi.search(searchTerm);\n      const tvResults = await tvApi.search(searchTerm);\n      console.log(movieResults, tvResults);\n      this.setState({ loading: true });\n    } catch {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResult, tvResult, searchTerm, loading, error } = this.state;\n    return (\n      <SearchPresenter\n        movieResult={movieResult}\n        tvResult={tvResult}\n        loading={loading}\n        searchTerm={searchTerm}\n        error={error}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}