{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/jiminyun/workspaces/jmflix/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jiminyun/workspaces/jmflix/src/Screens/TV/TVPresenter.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 0px 20px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nvar Container = styled.div(_templateObject());\n\nvar TVPresenter = function TVPresenter(_ref) {\n  var topRated = _ref.topRated,\n      popular = _ref.popular,\n      airingToday = _ref.airingToday,\n      loading = _ref.loading,\n      error = _ref.error;\n  return loading ? React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }) : React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, topRated && topRated.length > 0 && React.createElement(Section, {\n    title: \"Top Rated Shows\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, topRated.map(function (show) {\n    return React.createElement(Poster, {\n      key: show.id,\n      id: show.id,\n      imageUrl: show.poster_path,\n      title: show.name,\n      rating: show.vote_average,\n      year: show.first_air_date.substring(0, 4),\n      isMovie: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    });\n  })), popular && popular.length > 0 && React.createElement(Section, {\n    title: \"Popular Show\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, popular.map(function (show) {\n    return React.createElement(Poster, {\n      key: show.id,\n      id: show.id,\n      imageUrl: show.poster_path,\n      title: show.name,\n      rating: show.vote_average,\n      year: show.first_air_date.substring(0, 4),\n      isMovie: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    });\n  })), airingToday && airingToday.length > 0 && React.createElement(Section, {\n    title: \"Airing Today\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, airingToday.map(function (show) {\n    return React.createElement(Poster, {\n      key: show.id,\n      id: show.id,\n      imageUrl: show.poster_path,\n      title: show.name,\n      rating: show.vote_average,\n      year: show.first_air_date.substring(0, 4),\n      isMovie: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    });\n  })), error && React.createElement(Message, {\n    text: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }));\n};\n\nTVPresenter.proTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\nexport default TVPresenter;","map":{"version":3,"sources":["/Users/jiminyun/workspaces/jmflix/src/Screens/TV/TVPresenter.js"],"names":["React","PropTypes","styled","Section","Loader","Message","Poster","Container","div","TVPresenter","topRated","popular","airingToday","loading","error","length","map","show","id","poster_path","name","vote_average","first_air_date","substring","proTypes","array","bool","isRequired","string"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) =>\n  loading ? (\n    <Loader />\n  ) : (\n    <Container>\n      {topRated && topRated.length > 0 && (\n        <Section title=\"Top Rated Shows\">\n          {topRated.map(show => (\n            <Poster\n              key={show.id}\n              id={show.id}\n              imageUrl={show.poster_path}\n              title={show.name}\n              rating={show.vote_average}\n              year={show.first_air_date.substring(0, 4)}\n              isMovie={false}\n            />\n          ))}\n        </Section>\n      )}\n\n      {popular && popular.length > 0 && (\n        <Section title=\"Popular Show\">\n          {popular.map(show => (\n            <Poster\n              key={show.id}\n              id={show.id}\n              imageUrl={show.poster_path}\n              title={show.name}\n              rating={show.vote_average}\n              year={show.first_air_date.substring(0, 4)}\n              isMovie={false}\n            />\n          ))}\n        </Section>\n      )}\n\n      {airingToday && airingToday.length > 0 && (\n        <Section title=\"Airing Today\">\n          {airingToday.map(show => (\n            <Poster\n              key={show.id}\n              id={show.id}\n              imageUrl={show.poster_path}\n              title={show.name}\n              rating={show.vote_average}\n              year={show.first_air_date.substring(0, 4)}\n              isMovie={false}\n            />\n          ))}\n        </Section>\n      )}\n\n      {error && <Message text={error} />}\n    </Container>\n  );\n\nTVPresenter.proTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default TVPresenter;\n"]},"metadata":{},"sourceType":"module"}