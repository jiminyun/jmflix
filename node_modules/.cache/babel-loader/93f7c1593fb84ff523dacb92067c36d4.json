{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jiminyun/workspaces/jmflix/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/jiminyun/workspaces/jmflix/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/jiminyun/workspaces/jmflix/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/jiminyun/workspaces/jmflix/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jiminyun/workspaces/jmflix/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jiminyun/workspaces/jmflix/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jiminyun/workspaces/jmflix/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jiminyun/workspaces/jmflix/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jiminyun/workspaces/jmflix/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jiminyun/workspaces/jmflix/src/Routes/Home/index.js\";\nimport React, { Component, Fragment } from \"react\"; //import { render } from \"react-dom\";\n//import request from \"superagent\";\n\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"API\";\n\nvar _default =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_default).call(this, props)); // Sets up our initial state\n\n    _this.loadnowPlaying =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _ref2, nxtNowPlaying;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return moviesApi.nowPlaying();\n\n            case 3:\n              _ref2 = _context.sent;\n              nxtNowPlaying = _ref2.data.results;\n\n              _this.setState({\n                nowPlaying: _objectSpread({}, _this.state.nowPlaying, nxtNowPlaying)\n              });\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n\n              _this.setState({\n                error: \"Can't find now Playing movies information.\"\n              });\n\n            case 11:\n              _context.prev = 11;\n\n              _this.setState({\n                loading: false\n              });\n\n              return _context.finish(11);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 8, 11, 14]]);\n    }));\n    _this.state = {\n      nowPlaying: null,\n      upcoming: null,\n      popular: null,\n      error: null,\n      loading: true,\n      hasMore: true\n    }; // Binds our scroll event handler\n\n    window.onscroll = function () {\n      var _assertThisInitialize = _assertThisInitialized(_assertThisInitialized(_this)),\n          loadnowPlaying = _assertThisInitialize.loadnowPlaying,\n          _assertThisInitialize2 = _assertThisInitialize.state,\n          error = _assertThisInitialize2.error,\n          loading = _assertThisInitialize2.loading,\n          hasMore = _assertThisInitialize2.hasMore; // Bails early if:\n      // * there's an error\n      // * it's already loading\n      // * there's nothing left to load\n\n\n      if (error || loading || !hasMore) return; // Checks that the page has scrolled to the bottom\n\n      if (window.innerHeight + document.documentElement.scrollTop === document.documentElement.offsetHeight) {\n        loadnowPlaying();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {// Loads some users on initial load\n      // this.loadnowPlaying();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state);\n      var _this$state = this.state,\n          nowPlaying = _this$state.nowPlaying,\n          upcoming = _this$state.upcoming,\n          popular = _this$state.popular,\n          error = _this$state.error,\n          loading = _this$state.loading;\n      return React.createElement(HomePresenter, {\n        nowPlaying: nowPlaying,\n        upcoming: upcoming,\n        popular: popular,\n        error: error,\n        loading: loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/Users/jiminyun/workspaces/jmflix/src/Routes/Home/index.js"],"names":["React","Component","Fragment","HomePresenter","moviesApi","props","loadnowPlaying","nowPlaying","nxtNowPlaying","data","results","setState","state","error","loading","upcoming","popular","hasMore","window","onscroll","innerHeight","document","documentElement","scrollTop","offsetHeight","console","log"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;AACA;;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,SAAT,QAA0B,KAA1B;;;;;;;AAGE,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN,GADiB,CAGjB;;AAHiB,UAyCnBC,cAzCmB;AAAA;AAAA;AAAA;AAAA,6BAyCF;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAIHF,SAAS,CAACG,UAAV,EAJG;;AAAA;AAAA;AAGMC,cAAAA,aAHN,SAGXC,IAHW,CAGHC,OAHG;;AAMb,oBAAKC,QAAL,CAAc;AACZJ,gBAAAA,UAAU,oBAAO,MAAKK,KAAL,CAAWL,UAAlB,EAAiCC,aAAjC;AADE,eAAd;;AANa;AAAA;;AAAA;AAAA;AAAA;;AAUb,oBAAKG,QAAL,CAAc;AACZE,gBAAAA,KAAK,EAAE;AADK,eAAd;;AAVa;AAAA;;AAcb,oBAAKF,QAAL,CAAc;AACZG,gBAAAA,OAAO,EAAE;AADG,eAAd;;AAda;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAzCE;AAIjB,UAAKF,KAAL,GAAa;AACXL,MAAAA,UAAU,EAAE,IADD;AAEXQ,MAAAA,QAAQ,EAAE,IAFC;AAGXC,MAAAA,OAAO,EAAE,IAHE;AAIXH,MAAAA,KAAK,EAAE,IAJI;AAKXC,MAAAA,OAAO,EAAE,IALE;AAMXG,MAAAA,OAAO,EAAE;AANE,KAAb,CAJiB,CAajB;;AACAC,IAAAA,MAAM,CAACC,QAAP,GAAkB,YAAM;AAAA;AAAA,UAEpBb,cAFoB,yBAEpBA,cAFoB;AAAA,yDAGpBM,KAHoB;AAAA,UAGXC,KAHW,0BAGXA,KAHW;AAAA,UAGJC,OAHI,0BAGJA,OAHI;AAAA,UAGKG,OAHL,0BAGKA,OAHL,EAMtB;AACA;AACA;AACA;;;AACA,UAAIJ,KAAK,IAAIC,OAAT,IAAoB,CAACG,OAAzB,EAAkC,OAVZ,CAYtB;;AACA,UACEC,MAAM,CAACE,WAAP,GAAqBC,QAAQ,CAACC,eAAT,CAAyBC,SAA9C,KACAF,QAAQ,CAACC,eAAT,CAAyBE,YAF3B,EAGE;AACAlB,QAAAA,cAAc;AACf;AACF,KAnBD;;AAdiB;AAkClB;;;;yCAEoB,CACnB;AACA;AACD;;;6BAsBQ;AACPmB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAjB;AADO,wBAEmD,KAAKA,KAFxD;AAAA,UAECL,UAFD,eAECA,UAFD;AAAA,UAEaQ,QAFb,eAEaA,QAFb;AAAA,UAEuBC,OAFvB,eAEuBA,OAFvB;AAAA,UAEgCH,KAFhC,eAEgCA,KAFhC;AAAA,UAEuCC,OAFvC,eAEuCA,OAFvC;AAGP,aACE,oBAAC,aAAD;AACE,QAAA,UAAU,EAAEP,UADd;AAEE,QAAA,QAAQ,EAAEQ,QAFZ;AAGE,QAAA,OAAO,EAAEC,OAHX;AAIE,QAAA,KAAK,EAAEH,KAJT;AAKE,QAAA,OAAO,EAAEC,OALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AASD;;;;EA1E0Bd,KAAK,CAACC,S","sourcesContent":["import React, { Component, Fragment } from \"react\";\n//import { render } from \"react-dom\";\n//import request from \"superagent\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"API\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Sets up our initial state\n    this.state = {\n      nowPlaying: null,\n      upcoming: null,\n      popular: null,\n      error: null,\n      loading: true,\n      hasMore: true\n    };\n\n    // Binds our scroll event handler\n    window.onscroll = () => {\n      const {\n        loadnowPlaying,\n        state: { error, loading, hasMore }\n      } = this;\n\n      // Bails early if:\n      // * there's an error\n      // * it's already loading\n      // * there's nothing left to load\n      if (error || loading || !hasMore) return;\n\n      // Checks that the page has scrolled to the bottom\n      if (\n        window.innerHeight + document.documentElement.scrollTop ===\n        document.documentElement.offsetHeight\n      ) {\n        loadnowPlaying();\n      }\n    };\n  }\n\n  componentWillMount() {\n    // Loads some users on initial load\n    // this.loadnowPlaying();\n  }\n\n  loadnowPlaying = async () => {\n    try {\n      const {\n        data: { results: nxtNowPlaying }\n      } = await moviesApi.nowPlaying();\n\n      this.setState({\n        nowPlaying: { ...this.state.nowPlaying, ...nxtNowPlaying }\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find now Playing movies information.\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  };\n\n  render() {\n    console.log(this.state);\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}