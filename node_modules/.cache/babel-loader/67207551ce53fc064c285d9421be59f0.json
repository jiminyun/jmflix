{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jiminyun/workspaces/jmflix/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jiminyun/workspaces/jmflix/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/jiminyun/workspaces/jmflix/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jiminyun/workspaces/jmflix/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jiminyun/workspaces/jmflix/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jiminyun/workspaces/jmflix/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jiminyun/workspaces/jmflix/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jiminyun/workspaces/jmflix/src/Routes/Detail/DetailContainer.js\";\nimport React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { movies, tv } from \"../../API\";\n\nvar _default =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_default).call(this, props));\n    var pathname = props.location.pathname;\n    _this.state = {\n      result: null,\n      loading: true,\n      error: null,\n      isMovie: pathname.includes(\"/movie/\")\n    };\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this$props, id, push, isMovie, parsedId, result;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$props = this.props, id = _this$props.match.params.id, push = _this$props.history.push;\n                isMovie = this.state.isMovie;\n                parsedId = parseInt(id); //console.log(typeof id, parseInt(id));\n\n                if (!isNaN(parsedId)) {\n                  _context.next = 5;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", push(\"/\"));\n\n              case 5:\n                result = null;\n                _context.prev = 6;\n\n                if (!isMovie) {\n                  _context.next = 11;\n                  break;\n                }\n\n                _context.next = 10;\n                return movies.movieDetail(parsedId);\n\n              case 10:\n                result = _context.sent;\n\n              case 11:\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](6);\n                this.setState({\n                  error: \"Can't find anything.\"\n                });\n\n              case 16:\n                _context.prev = 16;\n                this.setState({\n                  loading: false,\n                  result: result\n                });\n                return _context.finish(16);\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[6, 13, 16, 19]]);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props);\n      var _this$state = this.state,\n          result = _this$state.result,\n          loading = _this$state.loading,\n          error = _this$state.error;\n      return React.createElement(DetailPresenter, {\n        result: result,\n        loading: loading,\n        error: error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/Users/jiminyun/workspaces/jmflix/src/Routes/Detail/DetailContainer.js"],"names":["React","DetailPresenter","movies","tv","props","pathname","location","state","result","loading","error","isMovie","includes","id","match","params","push","history","parsedId","parseInt","isNaN","movieDetail","setState","console","log","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,MAAT,EAAiBC,EAAjB,QAA2B,WAA3B;;;;;;;AAGE,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;AADiB,QAGHC,QAHG,GAIbD,KAJa,CAGfE,QAHe,CAGHD,QAHG;AAKjB,UAAKE,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,IADG;AAEXC,MAAAA,OAAO,EAAE,IAFE;AAGXC,MAAAA,KAAK,EAAE,IAHI;AAIXC,MAAAA,OAAO,EAAEN,QAAQ,CAACO,QAAT,CAAkB,SAAlB;AAJE,KAAb;AALiB;AAWlB;;;;;;;;;;;;;;8BAQK,KAAKR,K,EAHKS,E,eADZC,K,CACEC,M,CAAUF,E,EAEDG,I,eAAXC,O,CAAWD,I;AAGLL,gBAAAA,O,GAAY,KAAKJ,K,CAAjBI,O;AACFO,gBAAAA,Q,GAAWC,QAAQ,CAACN,EAAD,C,EACzB;;qBACIO,KAAK,CAACF,QAAD,C;;;;;iDACAF,IAAI,CAAC,GAAD,C;;;AAGTR,gBAAAA,M,GAAS,I;;;qBAEPG,O;;;;;;uBACaT,MAAM,CAACmB,WAAP,CAAmBH,QAAnB,C;;;AAAfV,gBAAAA,M;;;;;;;;;AAGF,qBAAKc,QAAL,CAAc;AAAEZ,kBAAAA,KAAK,EAAE;AAAT,iBAAd;;;;AAEA,qBAAKY,QAAL,CAAc;AAAEb,kBAAAA,OAAO,EAAE,KAAX;AAAkBD,kBAAAA,MAAM,EAANA;AAAlB,iBAAd;;;;;;;;;;;;;;;;;;;6BAIK;AACPe,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAjB;AADO,wBAE4B,KAAKG,KAFjC;AAAA,UAECC,MAFD,eAECA,MAFD;AAAA,UAESC,OAFT,eAESA,OAFT;AAAA,UAEkBC,KAFlB,eAEkBA,KAFlB;AAGP,aAAO,oBAAC,eAAD;AAAiB,QAAA,MAAM,EAAEF,MAAzB;AAAiC,QAAA,OAAO,EAAEC,OAA1C;AAAmD,QAAA,KAAK,EAAEC,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EA7C0BV,KAAK,CAACyB,S","sourcesContent":["import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { movies, tv } from \"../../API\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname }\n    } = props;\n    this.state = {\n      result: null,\n      loading: true,\n      error: null,\n      isMovie: pathname.includes(\"/movie/\")\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id }\n      },\n      history: { push }\n    } = this.props;\n\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    //console.log(typeof id, parseInt(id));\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n\n    let result = null;\n    try {\n      if (isMovie) {\n        result = await movies.movieDetail(parsedId);\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    const { result, loading, error } = this.state;\n    return <DetailPresenter result={result} loading={loading} error={error} />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}