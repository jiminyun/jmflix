{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/jiminyun/workspaces/jmflix/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jiminyun/workspaces/jmflix/src/Routes/Home/HomePresenter.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: 50px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nvar Container = styled.div(_templateObject());\n\nvar HomePresenter = function HomePresenter(_ref) {\n  var nowPlaying = _ref.nowPlaying,\n      upcoming = _ref.upcoming,\n      popular = _ref.popular,\n      error = _ref.error,\n      loading = _ref.loading;\n  return loading ? React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }) : React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, nowPlaying && nowPlaying.length > 0 && React.createElement(Section, {\n    title: \"Now Playing\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, nowPlaying.filter(function (movie) {\n    return movie.poster_path !== null;\n  }).map(function (movie) {\n    return React.createElement(Poster, {\n      id: movie.id,\n      imageUrl: movie.poster_path,\n      title: movie.title,\n      rating: movie.vote_average,\n      year: movie.release_date.substring(0, 4),\n      isMovie: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    });\n  })), upcoming && nowPlaying.length > 0 && React.createElement(Section, {\n    title: \"Upcoming Movies\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, upcoming.map(function (movie) {\n    return React.createElement(Poster, {\n      key: movie.id,\n      id: movie.id,\n      imageUrl: movie.poster_path,\n      title: movie.title,\n      rating: movie.vote_average,\n      year: movie.release_date.substring(0, 4),\n      isMovie: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    });\n  })), popular && popular.length > 0 && React.createElement(Section, {\n    title: \"Popular Movies\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, popular.map(function (movie) {\n    return React.createElement(Poster, {\n      key: movie.id,\n      id: movie.id,\n      imageUrl: movie.poster_path,\n      title: movie.title,\n      rating: movie.vote_average,\n      year: movie.release_date.substring(0, 4),\n      isMovie: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    });\n  })), error && React.createElement(Message, {\n    text: error,\n    color: \"red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }));\n};\n\nHomePresenter.proTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\nexport default HomePresenter;","map":{"version":3,"sources":["/Users/jiminyun/workspaces/jmflix/src/Routes/Home/HomePresenter.js"],"names":["React","PropTypes","styled","Section","Loader","Message","Poster","Container","div","HomePresenter","nowPlaying","upcoming","popular","error","loading","length","filter","movie","poster_path","map","id","title","vote_average","release_date","substring","proTypes","array","bool","isRequired","string"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,SAAS,GAAGL,MAAM,CAACM,GAAV,mBAAf;;AAIA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,MAAGC,UAAH,QAAGA,UAAH;AAAA,MAAeC,QAAf,QAAeA,QAAf;AAAA,MAAyBC,OAAzB,QAAyBA,OAAzB;AAAA,MAAkCC,KAAlC,QAAkCA,KAAlC;AAAA,MAAyCC,OAAzC,QAAyCA,OAAzC;AAAA,SACpBA,OAAO,GACL,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAGL,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,UAAU,IAAIA,UAAU,CAACK,MAAX,GAAoB,CAAlC,IACC,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,UAAU,CACRM,MADF,CACS,UAAAC,KAAK;AAAA,WAAIA,KAAK,CAACC,WAAN,KAAsB,IAA1B;AAAA,GADd,EAEEC,GAFF,CAEM,UAAAF,KAAK;AAAA,WACR,oBAAC,MAAD;AACE,MAAA,EAAE,EAAEA,KAAK,CAACG,EADZ;AAEE,MAAA,QAAQ,EAAEH,KAAK,CAACC,WAFlB;AAGE,MAAA,KAAK,EAAED,KAAK,CAACI,KAHf;AAIE,MAAA,MAAM,EAAEJ,KAAK,CAACK,YAJhB;AAKE,MAAA,IAAI,EAAEL,KAAK,CAACM,YAAN,CAAmBC,SAAnB,CAA6B,CAA7B,EAAgC,CAAhC,CALR;AAME,MAAA,OAAO,EAAE,IANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADQ;AAAA,GAFX,CADH,CAFJ,EAiBGb,QAAQ,IAAID,UAAU,CAACK,MAAX,GAAoB,CAAhC,IACC,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QAAQ,CAACQ,GAAT,CAAa,UAAAF,KAAK;AAAA,WACjB,oBAAC,MAAD;AACE,MAAA,GAAG,EAAEA,KAAK,CAACG,EADb;AAEE,MAAA,EAAE,EAAEH,KAAK,CAACG,EAFZ;AAGE,MAAA,QAAQ,EAAEH,KAAK,CAACC,WAHlB;AAIE,MAAA,KAAK,EAAED,KAAK,CAACI,KAJf;AAKE,MAAA,MAAM,EAAEJ,KAAK,CAACK,YALhB;AAME,MAAA,IAAI,EAAEL,KAAK,CAACM,YAAN,CAAmBC,SAAnB,CAA6B,CAA7B,EAAgC,CAAhC,CANR;AAOE,MAAA,OAAO,EAAE,IAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADiB;AAAA,GAAlB,CADH,CAlBJ,EAgCGZ,OAAO,IAAIA,OAAO,CAACG,MAAR,GAAiB,CAA5B,IACC,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,OAAO,CAACO,GAAR,CAAY,UAAAF,KAAK;AAAA,WAChB,oBAAC,MAAD;AACE,MAAA,GAAG,EAAEA,KAAK,CAACG,EADb;AAEE,MAAA,EAAE,EAAEH,KAAK,CAACG,EAFZ;AAGE,MAAA,QAAQ,EAAEH,KAAK,CAACC,WAHlB;AAIE,MAAA,KAAK,EAAED,KAAK,CAACI,KAJf;AAKE,MAAA,MAAM,EAAEJ,KAAK,CAACK,YALhB;AAME,MAAA,IAAI,EAAEL,KAAK,CAACM,YAAN,CAAmBC,SAAnB,CAA6B,CAA7B,EAAgC,CAAhC,CANR;AAOE,MAAA,OAAO,EAAE,IAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADgB;AAAA,GAAjB,CADH,CAjCJ,EA+CGX,KAAK,IAAI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEA,KAAf;AAAsB,IAAA,KAAK,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/CZ,CAJkB;AAAA,CAAtB;;AAuDAJ,aAAa,CAACgB,QAAd,GAAyB;AACvBf,EAAAA,UAAU,EAAET,SAAS,CAACyB,KADC;AAEvBf,EAAAA,QAAQ,EAAEV,SAAS,CAACyB,KAFG;AAGvBd,EAAAA,OAAO,EAAEX,SAAS,CAACyB,KAHI;AAIvBZ,EAAAA,OAAO,EAAEb,SAAS,CAAC0B,IAAV,CAAeC,UAJD;AAKvBf,EAAAA,KAAK,EAAEZ,SAAS,CAAC4B;AALM,CAAzB;AAQA,eAAepB,aAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  margin: 50px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) =>\n  loading ? (\n    <Loader />\n  ) : (\n    <Container>\n      {nowPlaying && nowPlaying.length > 0 && (\n        <Section title=\"Now Playing\">\n          {nowPlaying\n            .filter(movie => movie.poster_path !== null)\n            .map(movie => (\n              <Poster\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n        </Section>\n      )}\n      {upcoming && nowPlaying.length > 0 && (\n        <Section title=\"Upcoming Movies\">\n          {upcoming.map(movie => (\n            <Poster\n              key={movie.id}\n              id={movie.id}\n              imageUrl={movie.poster_path}\n              title={movie.title}\n              rating={movie.vote_average}\n              year={movie.release_date.substring(0, 4)}\n              isMovie={true}\n            />\n          ))}\n        </Section>\n      )}\n      {popular && popular.length > 0 && (\n        <Section title=\"Popular Movies\">\n          {popular.map(movie => (\n            <Poster\n              key={movie.id}\n              id={movie.id}\n              imageUrl={movie.poster_path}\n              title={movie.title}\n              rating={movie.vote_average}\n              year={movie.release_date.substring(0, 4)}\n              isMovie={true}\n            />\n          ))}\n        </Section>\n      )}\n      {error && <Message text={error} color=\"red\" />}\n    </Container>\n  );\n\nHomePresenter.proTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default HomePresenter;\n"]},"metadata":{},"sourceType":"module"}