{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/jiminyun/workspaces/jmflix/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jiminyun/workspaces/jmflix/src/Screens/TV/TVPresenter.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 0px 10px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nvar Container = styled.div(_templateObject());\n\nvar TVPresenter = function TVPresenter(_ref) {\n  var topRated = _ref.topRated,\n      popular = _ref.popular,\n      airingToday = _ref.airingToday,\n      loading = _ref.loading,\n      error = _ref.error;\n  return loading ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"nothing\") : React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, topRated && topRated.length > 0 && React.createElement(Section, {\n    title: \"Top Rated Shows\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, topRated.map(function (show) {\n    return show.name;\n  })), popular && popular.length > 0 && React.createElement(Section, {\n    title: \"Popular Show\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, popular.map(function (show) {\n    return show.name;\n  })), airingToday && airingToday.length > 0 && React.createElement(Section, {\n    title: \"Airing Today\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, airingToday.map(function (show) {\n    return show.name;\n  })));\n};\n\nTVPresenter.proTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\nexport default TVPresenter;","map":{"version":3,"sources":["/Users/jiminyun/workspaces/jmflix/src/Screens/TV/TVPresenter.js"],"names":["React","PropTypes","styled","Section","Container","div","TVPresenter","topRated","popular","airingToday","loading","error","length","map","show","name","proTypes","array","bool","isRequired","string"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,IAAMC,SAAS,GAAGF,MAAM,CAACG,GAAV,mBAAf;;AAIA,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,MAAaC,OAAb,QAAaA,OAAb;AAAA,MAAsBC,WAAtB,QAAsBA,WAAtB;AAAA,MAAmCC,OAAnC,QAAmCA,OAAnC;AAAA,MAA4CC,KAA5C,QAA4CA,KAA5C;AAAA,SAClBD,OAAO,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADK,GAGL,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QAAQ,IAAIA,QAAQ,CAACK,MAAT,GAAkB,CAA9B,IACC,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,QAAQ,CAACM,GAAT,CAAa,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,IAAT;AAAA,GAAjB,CADH,CAFJ,EAOGP,OAAO,IAAIA,OAAO,CAACI,MAAR,GAAiB,CAA5B,IACC,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BJ,OAAO,CAACK,GAAR,CAAY,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,IAAT;AAAA,GAAhB,CAA/B,CARJ,EAWGN,WAAW,IAAIA,WAAW,CAACG,MAAZ,GAAqB,CAApC,IACC,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,WAAW,CAACI,GAAZ,CAAgB,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,IAAT;AAAA,GAApB,CADH,CAZJ,CAJgB;AAAA,CAApB;;AAuBAT,WAAW,CAACU,QAAZ,GAAuB;AACrBT,EAAAA,QAAQ,EAAEN,SAAS,CAACgB,KADC;AAErBT,EAAAA,OAAO,EAAEP,SAAS,CAACgB,KAFE;AAGrBR,EAAAA,WAAW,EAAER,SAAS,CAACgB,KAHF;AAIrBP,EAAAA,OAAO,EAAET,SAAS,CAACiB,IAAV,CAAeC,UAJH;AAKrBR,EAAAA,KAAK,EAAEV,SAAS,CAACmB;AALI,CAAvB;AAQA,eAAed,WAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\n\nconst Container = styled.div`\n  padding: 0px 10px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) =>\n  loading ? (\n    <span>nothing</span>\n  ) : (\n    <Container>\n      {topRated && topRated.length > 0 && (\n        <Section title=\"Top Rated Shows\">\n          {topRated.map(show => show.name)}\n        </Section>\n      )}\n\n      {popular && popular.length > 0 && (\n        <Section title=\"Popular Show\">{popular.map(show => show.name)}</Section>\n      )}\n\n      {airingToday && airingToday.length > 0 && (\n        <Section title=\"Airing Today\">\n          {airingToday.map(show => show.name)}\n        </Section>\n      )}\n    </Container>\n  );\n\nTVPresenter.proTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default TVPresenter;\n"]},"metadata":{},"sourceType":"module"}