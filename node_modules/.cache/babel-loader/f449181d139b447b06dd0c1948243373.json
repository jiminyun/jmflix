{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/jiminyun/workspaces/jmflix/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jiminyun/workspaces/jmflix/src/Routes/Detail/DetailPresenter.js\";\n\nfunction _templateObject12() {\n  var data = _taggedTemplateLiteral([\"\\n  //src: \", \" ;\\n  width : \\\"560\\\" ;\\n  height : \\\"315\\\";\\n  frameborder : \\\"0\\\" ;\\n  allowfullscreen ;\\n\"]);\n\n  _templateObject12 = function _templateObject12() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject11() {\n  var data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject11 = function _templateObject11() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: 12px;\\n  opacity: 0.7;\\n  line-height: 1.5;\\n  width: 50%;\\n\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: 0 10px;\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: 20px 0;\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: 32px;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 70%;\\n  margin-left: 10px;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 30%;\\n  background-image: url(\", \");\\n  background-position: center center;\\n  background-size: cover;\\n  height: 100%;\\n  border-radius: 10px;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  width: 100%;\\n  height: 100%;\\n  position: relative;\\n  border-radius: 5px;\\n  z-index: 1;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  background-image: url(\", \");\\n  background-position: center center;\\n  background-size: cover;\\n  opacity: 0.5;\\n  z-index: 0;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  height: calc(100vh - 50px);\\n  width: 100%;\\n  position: relative;\\n  padding: 50px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nvar Container = styled.div(_templateObject());\nvar Backdrop = styled.div(_templateObject2(), function (props) {\n  return props.bgImage;\n});\nvar Content = styled.div(_templateObject3());\nvar Cover = styled.div(_templateObject4(), function (props) {\n  return props.bgImage;\n});\nvar Data = styled.div(_templateObject5());\nvar Title = styled.span(_templateObject6());\nvar ItemContainer = styled.div(_templateObject7());\nvar Item = styled.span(_templateObject8());\nvar Divider = styled.span(_templateObject9());\nvar Overview = styled.p(_templateObject10());\nvar Videos = styled.div(_templateObject11());\nvar Video = styled.iframe(_templateObject12(), function (props) {\n  return props.url;\n});\n\nvar DetailPresenter = function DetailPresenter(_ref) {\n  var result = _ref.result,\n      loading = _ref.loading,\n      error = _ref.error,\n      isMovie = _ref.isMovie;\n  return loading ? React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }) : React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Backdrop, {\n    bgImage: result.backdrop_path ? \"https://image.tmdb.org/t/p/original\".concat(result.backdrop_path) : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Cover, {\n    bgImage: result.poster_path ? \"https://image.tmdb.org/t/p/original\".concat(result.poster_path) : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(Data, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, result.original_title ? result.original_title : result.original_name), React.createElement(ItemContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, result.release_date ? result.release_date.substring(0, 4) : result.first_air_date.substring(0, 4)), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"\\u2022\"), React.createElement(Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, result.runtime ? result.runtime : result.episode_run_time[0], \" min\"), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"\\u2022\"), React.createElement(Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, result.genres && result.genres.map(function (genre, index) {\n    return index === result.genres.length - 1 ? genre.name : \"\".concat(genre.name, \" / \");\n  }))), React.createElement(Overview, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, result.overview), React.createElement(Videos, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, result.videos && result.videos.results.map(function (video, index) {\n    return React.createElement(Video, {\n      url: \"http://www.youtube.com/embed/\".concat(video.key),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    });\n  })))));\n};\n\nDetailPresenter.proTypes = {\n  result: PropTypes.array,\n  tvResults: PropTypes.array,\n  isMovie: PropTypes.bool.isRequired,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\nexport default DetailPresenter;","map":{"version":3,"sources":["/Users/jiminyun/workspaces/jmflix/src/Routes/Detail/DetailPresenter.js"],"names":["React","PropTypes","styled","Loader","Container","div","Backdrop","props","bgImage","Content","Cover","Data","Title","span","ItemContainer","Item","Divider","Overview","p","Videos","Video","iframe","url","DetailPresenter","result","loading","error","isMovie","backdrop_path","poster_path","original_title","original_name","release_date","substring","first_air_date","runtime","episode_run_time","genres","map","genre","index","length","name","overview","videos","results","video","key","proTypes","array","tvResults","bool","isRequired","string"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  border-radius: 5px;\n  z-index: 1;\n`;\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 10px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.span`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst Videos = styled.div``;\n\nconst Video = styled.iframe`\n  //src: ${props => props.url} ;\n  width : \"560\" ;\n  height : \"315\";\n  frameborder : \"0\" ;\n  allowfullscreen ;\n`;\nconst DetailPresenter = ({ result, loading, error, isMovie }) =>\n  loading ? (\n    <Loader />\n  ) : (\n    <Container>\n      <Backdrop\n        bgImage={\n          result.backdrop_path\n            ? `https://image.tmdb.org/t/p/original${result.backdrop_path}`\n            : null\n        }\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : null\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n          <Videos>\n            {result.videos &&\n              result.videos.results.map((video, index) => (\n                <Video url={`http://www.youtube.com/embed/${video.key}`} />\n              ))}\n          </Videos>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.proTypes = {\n  result: PropTypes.array,\n  tvResults: PropTypes.array,\n  isMovie: PropTypes.bool.isRequired,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default DetailPresenter;\n"]},"metadata":{},"sourceType":"module"}